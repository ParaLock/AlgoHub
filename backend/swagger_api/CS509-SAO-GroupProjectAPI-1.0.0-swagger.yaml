swagger: '2.0'
info:
  title: "ams-api"
  version: 1.0.0
schemes:
- "https"
paths:

  # ------------------ ALGORITHM BEGIN ------------------------------   

  /algorithms/{id}:
    get:
      summary: Get algorithm by id
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: string
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/AlgorithmResponse"
                
  /algorithms/add:
    post:
      summary: Create algorithm
      produces:
      - application/json
      consumes:
      - application/json
      parameters:      
      - in: "body"        
        name: "AlgorithmAddRequest"        
        required: true        
        schema:          
          $ref: "#/definitions/AlgorithmAddRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/AlgorithmAddResponse"
                
  /algorithms/reclassify/{id}:
    post:
      summary: Reclassify algorithm 
      produces:
      - application/json
      consumes:
      - application/json
      parameters:     
      - name: "id"
        in: "path"
        required: true
        type: string 
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ReclassifyAlgorithmResponse"
  
    
  /algorithms/remove/{id}:
     post:
      summary: Remove algorithm by id
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: string
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/RemoveAlgorithmResponse"
  
  
  
  # ------------------ ALGORITHM END ------------------------------
  
  # ------------------ IMPLEMENTATION BEGIN ------------------------------
  
  /implementations/{id}:
    get:
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: string
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ImplementationResponse"
            
                
  /implementations/add:
    post:
      summary: Create Implementation
      produces:
      - application/json
      consumes:
      - application/json
      parameters:      
      - in: "body"        
        name: "ImplementationAddRequest"        
        required: true        
        schema:          
          $ref: "#/definitions/ImplementationAddRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ImplementationAddResponse"
  
                
  /implementations/remove/{id}:
    get:
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: string
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ImplementationRemoveResponse"
                
  # ------------------ IMPLEMENTATION END ------------------------------  
     
 # ------------------ Problem Instances Begin ---------------------------
  /problem_instances/{id}:
     get:
      summary: Get problem instance by id
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: string
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ProblemInstanceResponse"
            
            
  /problem_instances/add:
    post:
      summary: Create problem instance
      produces:
      - application/json
      consumes:
      - application/json
      parameters:      
      - in: "body"        
        name: "AddProblemInstanceRequest"        
        required: true        
        schema:          
          $ref: "#/definitions/AddProblemInstanceRequest"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/AddProblemInstanceResponse"
    
  /problem_instances/remove/{id}:
     post:
      summary: Remove problem instance 
      produces:
      - application/json
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: string
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/RemoveProblemInstanceResponse"
 
 
 
 # ------------------ Problem Instance End ------------------------------     
             
definitions:
    
    # ------------------ ALGORITHM BEGIN ------------------------------   
    
    AlgorithmResponse:
      type: object
      properties:
        algorithm_id:
          type: string
          
    AlgorithmAddRequest:
      type: object
      properties:
        name:
          type: string

        description:
          type: string
        
        parent:
          type: string
          
    AlgorithmAddResponse:
      type: object
      properties:
        algorithm_id:
          type: string
          
    RemoveAlgorithmResponse:
      type: object
      properties:
        deleted_implementations:
          type: array
          items:
            type: string
    
    
    
    ReclassifyAlgorithmResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        
      
    
          
    # ------------------ ALGORITHM END ------------------------------ 
    
    # ------------------ IMPLEMENTATION BEGIN ------------------------------     

    ImplementationResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        source_code: 
          type: string
          
    ImplementationAddRequest:
      type: object
      properties:
        name:
          type: string
        
        parent_algorithm: 
          type: string
          
        source_code: 
          type: string
          
    ImplementationAddResponse:
      type: object
      properties:
        implementation_id:
          type: string
          
    ImplementationRemoveResponse:
      type: object
      properties:
        deleted_benchmarks:
          type: array
          items:
            type: string
          
    
    # ------------------ IMPLEMENTATION END ------------------------------
    
    
    # ----------------- Problem Instance Begin ----------------------------
    ProblemInstanceResponse:
      type: object
      properties:
        name:
          type: string
    
    AddProblemInstanceRequest:
      type: object
      properties:
        name:
          type: string
        
        dataSetSize: 
          type: string
          
        problem_type: 
          type: string
          
        description:
          type: string
    
    
    AddProblemInstanceResponse:
      type: object
      properties:
        name:
          type: string
          
    RemoveProblemInstanceResponse:
      type: "object"
      required:
      - "error"
      - "name"
      - "statusCode"
      properties:
        name:
          type: "string"
        statusCode:
          type: "integer"
        error:
          type: "string"
    
    
    # ----------------- Problem Instance End ------------------------------
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /CS509-SAO/AlgoHub/1.0.0